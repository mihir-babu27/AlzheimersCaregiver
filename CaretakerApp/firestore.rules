rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Patients can only read/write inside their own patient document
    match /patients/{patientId} {
      // Allow read/write access to the patient document itself
      allow read, write: if request.auth != null && request.auth.uid == patientId;
      
      // Allow access to subcollections (reminders, tasks, contacts, medications)
      match /{subcollection}/{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == patientId;
      }
    }
    
    // Caretaker-patient linking collection
    match /caretakerPatients/{caretakerUid} {
      // Caretakers can only access their own linking documents
      allow read, write: if request.auth != null && request.auth.uid == caretakerUid;
      
      match /linkedPatients/{patientId} {
        allow read, write: if request.auth != null && request.auth.uid == caretakerUid;
      }
    }
    
    // Caretakers can read/write patient data if they are linked
    match /patients/{patientId} {
      // Allow caretakers to read/write if they are linked
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/caretakerPatients/$(request.auth.uid)/linkedPatients/$(patientId));
      
      // Allow access to subcollections if caretaker is linked
      match /{subcollection}/{document=**} {
        allow read, write: if request.auth != null && 
          exists(/databases/$(database)/documents/caretakerPatients/$(request.auth.uid)/linkedPatients/$(patientId));
      }
    }
    
    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
